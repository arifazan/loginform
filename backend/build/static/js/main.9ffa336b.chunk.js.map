{"version":3,"sources":["stores/UserStores.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStores","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ffa336b.chunk.js","sourcesContent":["import {extendObservable} from 'mobx';\r\n\r\nclass UserStore{\r\n    constructor(){\r\n        extendObservable(this,{\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"inputField\">\r\n        <input\r\n        className='input'\r\n        type = {this.props.type}\r\n        placeholder = {this.props.placeholder}\r\n        value = {this.props.value}\r\n        onChange = {(e) => this.props.onChange(e.target.value)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"submitButtom\">\r\n        <button \r\n            className ='btn'\r\n            disabled = {this.props.disabled}\r\n            onClick={ () => this.props.onClick()}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStores from './stores/UserStores';\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val){\r\n    val = val.trim();\r\n    if(val.length > 12){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n  \r\n  resetForm(){\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin(){\r\n    if(!this.state.username){\r\n      return;\r\n    }\r\n    if(!this.state.password){\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n\r\n    try {\r\n      let res = await fetch('/login',{\r\n        method: 'post',\r\n        headers:{\r\n          'Accept':'application/json',\r\n          'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success){\r\n        UserStores.isLoggedIn = true;\r\n        UserStores.username = result.username;\r\n      }else if (result && result.success === false){\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"loginForm\">\r\n        Log in\r\n        <InputField\r\n          type = 'text'\r\n          placeholder = 'Username'\r\n          value={this.state.username ? this.state.username:''}\r\n          onChange={(val) => this.setInputValue('username', val)}\r\n        />\r\n\r\n        <InputField\r\n          type = 'password'\r\n          placeholder = 'Password'\r\n          value={this.state.password ? this.state.password:''}\r\n          onChange={(val) => this.setInputValue('password', val)}\r\n        />\r\n\r\n        <SubmitButton \r\n          text='Login'\r\n          disabled = {this.state.buttonDisabled}\r\n          onClick = {() => this.doLogin()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStores from './stores/UserStores';\nimport LoginForm from './LoginForm';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n\n  async componentDidMount(){\n\n    try {\n      let res = await fetch('/isLoggedIn',{\n        method: 'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success){\n        UserStores.loading = false;\n        UserStores.isLoggedIn = true;\n        UserStores.username = result.username;\n      }else{\n        UserStores.loading = false;\n        UserStores.isLoggedIn = false;\n      }\n\n\n    } catch (e) {\n        UserStores.loading = false;\n        UserStores.isLoggedIn = false;\n    }\n\n  }\n\n\n  async doLogout(){\n\n    try {\n      let res = await fetch('/logout',{\n        method: 'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success){\n        UserStores.isLoggedIn = false;\n        UserStores.username = '';\n      }\n\n\n    } catch (e) {\n        console.log(e);\n    }\n\n  }\n\n  render(){\n\n    if(UserStores.loading){\n      return(\n        <div className=\"app\">\n          <div className=\"container\">\n            Loading, Please wait..\n          </div>\n        </div>\n      )\n    }else{\n      if (UserStores.isLoggedIn){\n        return(\n          <div className=\"app\">\n            <div className=\"container\">\n              Welcome {UserStores.username};\n\n              <SubmitButton\n                text={'Log out'}\n                disabled = {false}\n                onClick = { ()=> this.doLogout()}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    return (\n      <div className=\"app\">\n          <div className=\"container\">\n              <LoginForm />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}